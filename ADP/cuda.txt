#include "cuda_runtime.h"
#include "device_launch_parameters.h"
#include <stdio.h>
#include <stdlib.h>



__global__  void cuda_rf(int *cuda, int k)
{

	int i = threadIdx.x;
	int j = threadIdx.y;

	if (cuda[i][j] > cuda[i][k] + cuda[k][j])
	{
		cuda[i][j] = cuda[i][k] + cuda[k][j];
	}

}


int main(int argc, char **argv) {

	
	int *cuda;
	int num_blocks = 1;
	dim3 threadsPerBlock(4, 4);
	

	int  matrice, [4][4] = {
		{ 0, 2, 5, 6, },
		{ 2, 0, 3, 4, },
		{ 5, 3, 0, 1, },
		{ 6, 4, 1, 0, },
	};

	cudaMalloc(&cuda, 4); 
	cudaMemcpy(cuda, matrice, size, cudaMemcpyHostToDevice);
	
	for (int k = 0; k < 4; ++k) 
	{
		cuda_rf <<< num_blocks, threadsPerBlock >>> (cuda);
	}


	cudaMemcpy(matrice, , cuda, size, cudaMemcpyDeviceToHost);
	cudaFree(cuda);

	return 0;
}


